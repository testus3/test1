
on:
  #push:
    #branches:
      #- main
  #pull_request:
    #branches:
      #- main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2  # OR "2" -> To retrieve the preceding commit.
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v23

      - name: List all changed files
        run: |
          if [[ ${{ steps.changed-files.outputs.all_changed_files }} == *.txt ]]; then
            echo "A file was modified/added"
          else
            eecho "A txt file was not added/modified"
          fi
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.ipynb ]]; then
              #echo "$file was changed" #Lec03_files/file1.txt
              #echo "$(dirname "${file}")" #Lec03_files
              #echo "$(cd "$(dirname "$file")" && pwd -P)/$(basename "$file")" #/home/runnes/work/test1/test1/Lec03_files/file1.txt
              #echo "$(cd "$(dirname "$file")" && pwd -P)" #/home/runnes/work/test1/test1/Lec03_files
              cd $(cd "$(dirname "$file")" && pwd -P) #in the parent's folder
              
              #Installing jupyter & regex
              python -m pip install jupyter
              python -m pip install regex
              
              #echo "Hello there" > file1.txt
              jupyter nbconvert $(basename "$file") --to python
              
              

              jupyter nbconvert --execute --to markdown $(basename "$file").ipynb
              mv $(basename "$file") $(basename "${file%%.*}")_files
              mv $(basename "${file%%.*}").py $(basename "${file%%.*}")_files
              mv requirements.txt $(basename "${file%%.*}")_files
              python beautifyJupyterReadme.py
              mv $(basename "${file%%.*}").md $(basename "${file%%.*}")_files
            fi
          done
          if [[ $(ls .) == *.py ]]; then
            python create_requirements.py   #create the requirements in the present folder
            pip install -r requirements.txt #needs input or preceed action
          fi
          
          
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          echo "this is the message1"
          git status
          echo "this is the message2"
          git add .
          # commit if there are updates
          git diff --quiet && git diff --staged --quiet || git commit -am 'Added license headers'
          git push origin main -f
